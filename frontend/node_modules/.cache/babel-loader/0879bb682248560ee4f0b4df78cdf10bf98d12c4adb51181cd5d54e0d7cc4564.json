{"ast":null,"code":"import axios from \"axios\";\nexport const LOGIN_USER_KEY = \"HIVE_TECHWEAR_LOGIN_USER_KEY\";\nconst {\n  REACT_APP_ENVIRONMENT,\n  REACT_APP_API_BASE_URL_PROD,\n  REACT_APP_API_BASE_URL_DEV\n} = process.env;\nconst baseURL = \"http://127.0.0.1:8000/\";\nconst api = axios.create({\n  baseURL: baseURL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\n\n// Request interceptor\napi.interceptors.request.use(config => {\n  if (config.requireToken) {\n    const user = localStorage.getItem(LOGIN_USER_KEY) ? JSON.parse(localStorage.getItem(LOGIN_USER_KEY)) : null;\n    if (user !== null && user !== void 0 && user.token) {\n      config.headers.common[\"Authorization\"] = user.token;\n    }\n  }\n  return config;\n}, err => {\n  console.error(\"Request error:\", err);\n  return Promise.reject(err);\n});\n\n// Response interceptor\napi.interceptors.response.use(response => response.data, error => {\n  if (error.response) {\n    var _error$config;\n    console.error(\"API Error:\", {\n      status: error.response.status,\n      data: error.response.data,\n      url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url\n    });\n    if (error.response.status === 401) {\n      localStorage.removeItem(LOGIN_USER_KEY);\n    }\n    return Promise.reject(error);\n  } else {\n    console.error(\"Network or server error:\", error.message || error);\n    return Promise.reject({\n      message: \"Server not responding. Please try again later.\"\n    });\n  }\n});\nexport default class API {\n  constructor() {\n    this.signUp = signUpBody => {\n      const formData = new FormData();\n      for (const key in signUpBody) {\n        formData.append(key, signUpBody[key]);\n      }\n      return api.post(\"/users/signup/\", formData);\n    };\n    this.signIn = signInBody => {\n      const formData = new FormData();\n      for (const key in signInBody) {\n        formData.append(key, signInBody[key]);\n      }\n      return api.post(\"/users/signin/\", formData);\n    };\n    this.getCategories = () => api.get(\"/categories/\");\n    this.getProducts = (query = {}) => api.get(\"/products/\", {\n      params: query,\n      requireToken: true\n    });\n    this.getCarts = (query = {}) => api.get(\"/carts/\", {\n      params: query,\n      requireToken: true\n    });\n    this.addCart = addCartBody => {\n      const formData = new FormData();\n      for (const key in addCartBody) {\n        formData.append(key, addCartBody[key]);\n      }\n      return api.post(\"/carts/add/\", formData, {\n        requireToken: true\n      });\n    };\n    this.updateCart = (updateCartBody, cartId) => {\n      const formData = new FormData();\n      for (const key in updateCartBody) {\n        formData.append(key, updateCartBody[key]);\n      }\n      return api.put(`/carts/update/${cartId}/`, formData, {\n        requireToken: true\n      });\n    };\n    this.checkoutOrder = checkoutOrderBody => api.post(\"/orders/add/\", checkoutOrderBody, {\n      requireToken: true\n    });\n  }\n}","map":{"version":3,"names":["axios","LOGIN_USER_KEY","REACT_APP_ENVIRONMENT","REACT_APP_API_BASE_URL_PROD","REACT_APP_API_BASE_URL_DEV","process","env","baseURL","api","create","headers","interceptors","request","use","config","requireToken","user","localStorage","getItem","JSON","parse","token","common","err","console","error","Promise","reject","response","data","_error$config","status","url","removeItem","message","API","constructor","signUp","signUpBody","formData","FormData","key","append","post","signIn","signInBody","getCategories","get","getProducts","query","params","getCarts","addCart","addCartBody","updateCart","updateCartBody","cartId","put","checkoutOrder","checkoutOrderBody"],"sources":["D:/django projects/hivetechwear/frontend/src/API.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const LOGIN_USER_KEY = \"HIVE_TECHWEAR_LOGIN_USER_KEY\";\r\nconst { REACT_APP_ENVIRONMENT, REACT_APP_API_BASE_URL_PROD, REACT_APP_API_BASE_URL_DEV } = process.env;\r\n\r\nconst baseURL = \"http://127.0.0.1:8000/\";\r\n\r\nconst api = axios.create({\r\n  baseURL: baseURL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// Request interceptor\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    if (config.requireToken) {\r\n      const user = localStorage.getItem(LOGIN_USER_KEY)\r\n        ? JSON.parse(localStorage.getItem(LOGIN_USER_KEY))\r\n        : null;\r\n      if (user?.token) {\r\n        config.headers.common[\"Authorization\"] = user.token;\r\n      }\r\n    }\r\n    return config;\r\n  },\r\n  (err) => {\r\n    console.error(\"Request error:\", err);\r\n    return Promise.reject(err);\r\n  }\r\n);\r\n\r\n// Response interceptor\r\napi.interceptors.response.use(\r\n  (response) => response.data,\r\n  (error) => {\r\n    if (error.response) {\r\n      console.error(\"API Error:\", {\r\n        status: error.response.status,\r\n        data: error.response.data,\r\n        url: error.config?.url,\r\n      });\r\n\r\n      if (error.response.status === 401) {\r\n        localStorage.removeItem(LOGIN_USER_KEY);\r\n      }\r\n\r\n      return Promise.reject(error);\r\n    } else {\r\n      console.error(\"Network or server error:\", error.message || error);\r\n      return Promise.reject({\r\n        message: \"Server not responding. Please try again later.\",\r\n      });\r\n    }\r\n  }\r\n);\r\n\r\nexport default class API {\r\n  signUp = (signUpBody) => {\r\n    const formData = new FormData();\r\n    for (const key in signUpBody) {\r\n      formData.append(key, signUpBody[key]);\r\n    }\r\n    return api.post(\"/users/signup/\", formData);\r\n  };\r\n\r\n  signIn = (signInBody) => {\r\n    const formData = new FormData();\r\n    for (const key in signInBody) {\r\n      formData.append(key, signInBody[key]);\r\n    }\r\n    return api.post(\"/users/signin/\", formData);\r\n  };\r\n\r\n  getCategories = () => api.get(\"/categories/\");\r\n\r\n  getProducts = (query = {}) => api.get(\"/products/\", { params: query, requireToken: true });\r\n\r\n  getCarts = (query = {}) => api.get(\"/carts/\", { params: query, requireToken: true });\r\n\r\n  addCart = (addCartBody) => {\r\n    const formData = new FormData();\r\n    for (const key in addCartBody) {\r\n      formData.append(key, addCartBody[key]);\r\n    }\r\n    return api.post(\"/carts/add/\", formData, { requireToken: true });\r\n  };\r\n\r\n  updateCart = (updateCartBody, cartId) => {\r\n    const formData = new FormData();\r\n    for (const key in updateCartBody) {\r\n      formData.append(key, updateCartBody[key]);\r\n    }\r\n    return api.put(`/carts/update/${cartId}/`, formData, { requireToken: true });\r\n  };\r\n\r\n  checkoutOrder = (checkoutOrderBody) => api.post(\"/orders/add/\", checkoutOrderBody, { requireToken: true });\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}